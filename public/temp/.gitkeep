 #1 gitignore codegenerator

-DevDependencies v/s Dependencies
-import .dotenv still required require syntax   -> type-module
    - how it works , ðŸ¤• have to do changes in package.json
  -git does not store empty folders
  -about prettier - very useful for group project
  - db connection -> isntances and exit

>> Custom api responses and error handling
  Try-catch or Promise   - understand
  What is CORS_ORIGIN and why I write it in .env ? ðŸ«¢

>> User and Video model with hooks and JWT
    - index : true -> in model for ( for searching )
     checkout mongoose website
    - mongoose.aggregate
    - bcrypt v/s bcryptjs
    - jsonwebtoken

    -hash the password using bcrypt
    https://mongoosejs.com/docs/middleware.html
    https://mongoosejs.com/docs/middleware.html#pre

    -cutsom methods ( predefined methods like up)
       used the compare method of bcrypt
       return true/false
    - jwt as a beard token
    - npmjs -> jwt checkout github

  // Learn about access tokens and secrect keys
  // learn about cloudinary and multer

  Read about multer
  https://github.com/expressjs/multer#readme

-- .env file takes almost 3hr because of (;) 

>> how to upload files in backend -> multer & cloudinary
  -> using multer
     - nulter.diskStorage -> {destination, filename} -> export const upload = multer({ storage: storage })
     - In routes with middleware -> upload.fields([ {}, {}])
  -> cloudinary
     - cloudinary.uploader.upload(localFilePath)

>> Router & controller for Register
   -> new methods -> checkout the register controller

>> Logic for register 
  -> Steps

>> Access RefreshToken , middleware and cookies
  -> access v/s refresh token
  -> access token
   -short lived
   -user validate by this

  -> refresh token
    -long lived
    -present at both sides ( db and userside)

  -> loginUser controller 